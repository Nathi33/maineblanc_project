import os
import django
import json

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'maineblanc_project.settings')
django.setup()

from django.core.management import call_command
from django.db import OperationalError

# Liste des fixtures √† charger avec le chemin relatif depuis le projet
fixtures = [
    'core/fixtures/core_fixture.json',
    'reservations/fixtures/reservations_fixture.json',
    'bookings/fixtures/bookings_fixture.json',
]

def load_fixture(fixture_path):
    try:
        # Forcer l'encodage UTF-8 pour √©viter les erreurs de caract√®re
        with open(fixture_path, encoding='utf-8') as f:
            data = json.load(f)
        # Charger la fixture
        call_command('loaddata', fixture_path)
        print(f"‚úÖ Fixture charg√©e : {fixture_path}")
    except FileNotFoundError:
        print(f"‚ùå Fichier non trouv√© : {fixture_path}")
    except json.JSONDecodeError as e:
        print(f"‚ùå Erreur d'encodage UTF-8 dans {fixture_path} : {e}")
    except OperationalError as e:
        # Ignorer les erreurs li√©es √† des tables manquantes (par ex. les tables _translation)
        print(f"‚ö†Ô∏è Ignor√© probl√®me de table pour {fixture_path} : {e}")
    except Exception as e:
        print(f"‚ùå Erreur lors du chargement de {fixture_path} : {e}")

if __name__ == "__main__":
    print("üîπ Migration de la base de donn√©es...")
    call_command('migrate')  # cr√©e les tables si n√©cessaire

    print("üîπ Chargement des fixtures...")
    for fixture in fixtures:
        load_fixture(fixture)

    print("‚úÖ Chargement des fixtures termin√© !")
